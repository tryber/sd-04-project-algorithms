{
  "requirements": [
    {
      "identifier": "test_validar_melhor_horario_com_sucesso",
      "description": "Retorne, para uma entrada específica, o melhor horário para disponibilizar o conteúdo",
      "bonus": false
    },
    {
      "identifier": "test_validar_melhor_horario_quando_target_empata_com_maior_saida",
      "description": "Retorne, quando mais de um `target_time` empata com a maior saída, o melhor horário para disponibilizar o conteúdo",
      "bonus": false
    },
    {
      "identifier": "test_validar_start_time_com_valor_vazio",
      "description": "Retorne `0` se  `start_time` recebe um valor vazio",
      "bonus": false
    },
    {
      "identifier": "test_validar_target_time_com_vazio",
      "description": "Retorne `0` se  `target_time` recebe um valor vazio",
      "bonus": false
    },
    {
      "identifier": "test_validar_tempo_schedule",
      "description": "Execute a função, somando 10.000 execuções para uma entrada pequena, em menos que 0.02s (tempo da execução do avaliador no Pull Request)",
      "bonus": false
    },
    {
      "identifier": "test_validar_se_a_palavra_e_um_palindromo_retorna_true",
      "description": "Retorne `true` se a palavra passada por parâmetro for um palíndromo",
      "bonus": false
    },
    {
      "identifier": "test_validar_se_a_palavra_nao_e_um_palindromo_retorna_false",
      "description": "Retorne `false` se a palavra passada por parâmetro não for um palíndromo",
      "bonus": false
    },
    {
      "identifier": "test_validar_se_nao_passar_palavra_retorna_false",
      "description": "Retorne `false` se nenhuma palavra for passada por parâmetro",
      "bonus": false
    },
    {
      "identifier": "test_validar_se_as_palavras_sao_um_anagrama",
      "description": "Retorne `true` se as palavras passadas forem anagramas",
      "bonus": false
    },
    {
      "identifier": "test_validar_se_as_palavras_nao_sao_um_anagrama",
      "description": "Retorne `false` se as palavras passadas por parâmetro não forem anagramas",
      "bonus": false
    },
    {
      "identifier": "test_validar_se_passar_primeira_palavra_em_branco_retorna_false",
      "description": "Retorne `false` se a primeira palavra passada por parâmetro for uma string vazia",
      "bonus": false
    },
    {
      "identifier": "test_validar_se_passar_segunda_palavra_em_branco_retorna_false",
      "description": "Retorne `false` se a segunda palavra passada por parâmetro for uma string vazia",
      "bonus": false
    },
    {
      "identifier": "test_validar_tempo_anagrama",
      "description": "Execute a função, somando 10.000 execuções para uma entrada pequena, em menos que 8.2s (tempo da execução do avaliador no Pull Request)",
      "bonus": false
    },
    {
      "identifier": "test_validar_se_encontra_numeros_repetidos",
      "description": "Retorne o número repetivo se a função receber, como parâmetro, uma lista com números repetidos",
      "bonus": true
    },
    {
      "identifier": "test_validar_se_retorna_false_quando_nao_envia_valores",
      "description": "Retorne `false` se a função não receber nenhum parâmetro",
      "bonus": true
    },
    {
      "identifier": "test_validar_se_retorna_false_quando_envia_string",
      "description": "Retorne `false` se a função receber, como parâmetro, uma string",
      "bonus": true
    },
    {
      "identifier": "test_validar_se_retorna_false_quando_nao_ha_repeticao",
      "description": "Retorne `false` se a função receber, como parâmetro, uma lista sem números repetidos",
      "bonus": true
    },
    {
      "identifier": "test_validar_se_retorna_false_quando_passa_um_valor_apenas",
      "description": "Retorne `false` se a função receber, como parâmetro, apenas um valor",
      "bonus": true
    },
    {
      "identifier": "test_validar_se_retorna_false_quando_passa_numero_negativo",
      "description": "Retorne `false` se a função receber, como parâmetro, um número negativo",
      "bonus": true
    },
    {
      "identifier": "test_validar_tempo_duplicate",
      "description": "Execute a função, somando 10.000 execuções para uma entrada pequena, em menos que 0.01s (tempo da execução do avaliador no Pull Request)",
      "bonus": true
    },
    {
      "identifier": "test_validar_se_a_palavra_e_um_palindromo_iterativo_retorna_true",
      "description": "Retorne `true` se a palavra passada como parâmetro for um palíndromo, executando uma função iterativa",
      "bonus": true
    },
    {
      "identifier": "test_validar_se_a_palavra_nao_e_um_palindromo_iterativo_retorna_false",
      "description": "Retorne true se a palavra passada como parâmetro for um palíndromo, executando uma função iterativa",
      "bonus": true
    },
    {
      "identifier": "test_validar_se_nao_passar_palavra_iterativa_retorna_false",
      "description": "Retorne `false` se nenhuma palavra for passada como parâmetro, executando uma função iterativa",
      "bonus": true
    },
    {
      "identifier": "test_validar_tempo_iterative",
      "description": "Execute a função, somando 10.000 execuções para uma entrada pequena, em menos que 0.005s (tempo da execução do avaliador no Pull Request)",
      "bonus": true
    }
  ]
}
